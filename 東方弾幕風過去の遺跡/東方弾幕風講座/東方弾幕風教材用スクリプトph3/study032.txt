#東方弾幕風[Single]
#ScriptVersion[3]
#Title["オブジェクト弾 (当たり判定の消失) (rand_int無し)"]
#Text[""]
#Image[""]
#System["/script/default_system/Default_System.txt"]
#Background["script/default_system/Default_Background_IceMountain.txt"]
#BGM[DEFAULT]
#Player[DEFAULT]

#include "script/default_system/Default_ShotConst.txt"

let objEnemy;

@Event {
  alternative(GetEventType)
  case(EV_REQUEST_LIFE) {
    SetScriptResult(2000);
  }
}

@Initialize {
  objEnemy = ObjEnemy_Create(OBJ_ENEMY_BOSS);
  ObjEnemy_Regist(objEnemy);

  let imgExRumia = GetCurrentScriptDirectory ~ "img/ExRumia.png";
  ObjPrim_SetTexture(objEnemy, imgExRumia);
  ObjSprite2D_SetSourceRect(objEnemy, 64, 1, 127, 64);
  ObjSprite2D_SetDestCenter(objEnemy);

  let cx = GetStgFrameWidth / 2;
  ObjMove_SetDestAtFrame(objEnemy, cx, 60, 58);

  mainTask;
  endProcess;
}

@MainLoop {
  ObjEnemy_SetIntersectionCircleToShot(objEnemy, ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 32);
  ObjEnemy_SetIntersectionCircleToPlayer(objEnemy, ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 24);
  yield;
}

task mainTask {
  loop(60) {yield;}

  ObjMove_SetDestAtFrame(objEnemy, GetStgFrameWidth/2, GetStgFrameHeight/2 - 40, 60);
  loop(60) {yield;}
  loop {
    loop(4) {
      let angle = rand(0, 360);
      let cycle = rand_int0(119)%120);
      loop(120) {
	objectBullet(angle, cycle);
	angle += 360/120;
      }
      loop(120) {yield;}
    }
    loop(180) {yield;}

    let count = 0;
    let sign = rand_int0(1)*2 - 1;
    loop(16) {
      let type = 1 + truncate(count/4);
      let angle = rand(0, 360);
      let cycle = rand_int(119);

      loop(120) {
	objectBullet(angle, cycle);
	angle += 360/120;
	cycle = (cycle + type*sign + 120) % 120;
      }

      sign *= -1;
      count++;
      loop(120) {yield;}
    }
    loop(180) {yield;}
  }
}

task objectBullet (let angle, let cycle) {
  let obj = CreateShotA1(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), 1, angle, DS_BALL_M_RED, 0);

  while(!Obj_IsDeleted(obj)) {
    let alpha = 15 + 240*cycle/60;
    if(cycle >= 60) {
      alpha = 255 - 240*(cycle-60)/60;
    }

    ObjRender_SetAlpha(obj, alpha);
    if(alpha >= 192) {
      ObjShot_SetIntersectionEnable(obj, true);
      ObjShot_SetGraphic(obj, DS_BALL_M_RED);
    } else {
      ObjShot_SetIntersectionEnable(obj, false);
      ObjShot_SetGraphic(obj, DS_BALL_M_WHITE);
    }

    cycle = (cycle+1) % 120;
    yield;
  }
}

task endProcess {
  while(ObjEnemy_GetInfo(objEnemy, INFO_LIFE) > 0) {yield;}
  Obj_Delete(objEnemy);
  CloseScript(GetOwnScriptID);
  return;
}

#include "./function.txt"
