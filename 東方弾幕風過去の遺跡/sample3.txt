#東方弾幕風
#Title[正弦波弾の例]
#Text[]
#BackGround[User()]
#ScriptVersion[2]

script_enemy_main{

    //グローバル変数
	let imgBoss = GetCurrentScriptDirectory() ~ "ExRumia.png";
	let wIni = 120;
	
	///////////////////////////////////////////////////////////

	@Initialize{
	    LoadGraphic(imgBoss);
	    
        SetMovePosition02(GetCenterX(), GetClipMinY() + 120, wIni);
        SetLife(4000);
        SetTimer(60);
        SetInvincibility(wIni);
        SetDamageRate(100, 100);
	    
	    TMain();
	}
		
	@MainLoop{
		SetCollisionA(GetX(), GetY(), 32);
		SetCollisionB(GetX(), GetY(), 24);
	    yield;
	}
	
	@DrawLoop{
	    SetTexture(imgBoss);
	    SetGraphicRect(1, 1, 64, 64);
	    DrawGraphic(GetX(), GetY());
	}
		
	@Finalize{
	    DeleteGraphic(imgBoss);
	}
	
	//////////////////////////////////////////////////////////
	
	task TMain{
	    //初期化
	    
	    yield;
	    loop(wIni){ yield; }
	    
	    //処理
	    loop{
	        let angle = GetAngleToPlayer();
	        loop(30){
	            CreateSinewaveShot(GetX(), GetY(), 5, angle, 30, 10, 0, WHITE12, 10);
	            CreateSinewaveShot(GetX(), GetY(), 5, angle, 30, 10, 180, WHITE12, 10);
	            loop(3){ yield; }
	        }
	        loop(60){ yield; }
	    }
	}
	
	//////////////////////////////////////////////////////////

    //正弦波弾の例
	//amp:振幅, om:角速度, arg:位相
	task CreateSinewaveShot(let x, let y, let speed, let angle,
				let amp, let om, let arg, let graphic, let delay) {
	    
		let t = 0;
		let px = speed*t;
		let py = amp*sin(om*t + arg);
		let a = amp*om*3.1415926/(180*speed);
	    
		//オブジェクト弾の作成
		let obj = Obj_Create(OBJ_SHOT);
	    
		//パラメータの設定
		Obj_SetPosition(obj, x + px*cos(angle) - py*sin(angle),
								 y + px*sin(angle) + py*cos(angle));
		Obj_SetSpeed(obj, 0);
		Obj_SetAngle(obj, angle + atan(a*cos(om*t + arg)));
		ObjShot_SetGraphic(obj, graphic);
		ObjShot_SetDelay(obj, delay);
	    
		loop(delay){ yield; }
		
		while(!Obj_BeDeleted(obj))
		{
			//(px,py)座標での弾の位置を計算
			px=speed*t;
			py=amp*sin(om*t + arg);
			//回転・平行移動して実際の位置に
			Obj_SetPosition(obj, x + px*cos(angle) - py*sin(angle),
									 y + px*sin(angle) + py*cos(angle));
			//弾の方向にもangleを足す
			Obj_SetAngle(obj, angle + atan(a*cos(om*t + arg)));
	        
			t++;
			yield;
		}
	}
}
