#東方弾幕風
#Title[真意「円満の中のわだかまり」]
#Text[1通常]
#PlayLevel[1面中ボス]
#Image[.\img\study009.png]
#BackGround[Default]
#ScriptVersion[2]

script_enemy_main {
	let imgExRumia =  "script\img\きょーこ.png";
	@Initialize {
		SetMovePosition02(GetCenterX, GetClipMinY + 60, 60);
		SetLife(3000);
        CutIn(YOUMU,"真意「円満の中のわだかまり」",0,0,0,0,0);//スペルカード名表示


		LoadGraphic(imgExRumia);
		SetTexture(imgExRumia);
		SetGraphicRect(1, 1, 64, 64);
                SetTimer(60);

		mainTask;
		mainTask2;
		mainTask3;
               TMove;
	}

	@MainLoop {
		SetCollisionA(GetX, GetY, 24);
		SetCollisionB(GetX, GetY, 24);
		yield;
	}

	@DrawLoop {
		SetColor(255,255,255);
		SetRenderState(ALPHA);
		SetTexture(imgExRumia);
		if(GetSpeedX == 0) {
			SetGraphicRect(64, 1, 127, 64);
		} else if(GetSpeedX > 0) {
			SetGraphicRect(192, 1, 255, 64);
		} else if(GetSpeedX < 0) {
			SetGraphicRect(128, 1, 191, 64);
		}
		DrawGraphic(GetX, GetY);
	}

	@Finalize  {
		DeleteGraphic(imgExRumia);
	}

	task mainTask {
		loop(240) {yield;}

		loop {
			let speed = 0.5;
			let angle = 90-10 ;
			let t = 0 ;
			loop(999) {
             CreateShotA("S1",GetCenterX + 60*cos(36*t + 10),GetClipMinY + 60+ 60*sin(36*t + 10),0);
          SetShotDataA("S1",0,0,0,60,0,0,AQUA32);
SetShotDirectionType(PLAYER);
          SetShotDataA("S1",90,2,0,0.02,0,5,AQUA32);
SetShotDirectionType(ABSOLUTE);
          FireShot("S1");
            t++;
					angle += 11;
				speed += 0.3;
				loop(4) {yield;}
			}
			loop(60) {yield;}
		}
	}

	task mainTask2 {
		loop(120) {yield;}
		loop {let angle = 0;
			loop(12) {
				CreateShotA("stop1", GetCenterX, GetClipMinY + 60, 0);
				SetShotDataA("stop1", 0, 4, angle, 0, -0.1, 0, BLUE01);
				SetShotDataA("stop1", 60, 2, 90, 0, 0, 8, RED01);
				FireShot("stop1");
				angle += 360/12;
			}
			loop(120) {yield;}
		}
	}

	task mainTask3 {
		loop(60) {yield;}
		loop {let angle = 0;
			loop(24) {
				CreateShotA("stop1", GetCenterX, GetClipMinY + 60, 0);
				SetShotDataA("stop1", 0, 6, angle, 0, -0.1, 0, BLUE01);
				SetShotDataA("stop1", 60,2, 90, 0,0, 8, RED01);
				FireShot("stop1");
				angle += 360/24;
			}
			loop(120) {yield;}
		}
	}

// キャラを移動させるタスク
    task TMove {
        yield;

        loop {
            loop(120) { yield; }
            moveToPlayer(rand(40, 100), rand(-60, 60), 30,
                         GetClipMinX + 60, GetClipMinY + 20,
                         GetClipMaxX - 60, GetClipMinY + 200);
        }
    }
    // なるべくプレイヤーの方向に移動
    //   xMove  : x 方向の移動量（正の数）
    //   yAdd   : y 方向の移動量
    //   frame  : 移動に要するフレーム数
    //   left   : 以下、可動範囲
    //   top    :
    //   right  :
    //   bottom :
    function moveToPlayer(xMove, yAdd, frame, left, top, right, bottom) {
        let x;
        let y;

        if(GetPlayerX < GetX) {
            // プレイヤーより右に敵がいれば、敵は左に動きます。
            x = GetX - xMove;

            // 但し、敵が可動領域の左端よりも左にいくようなら、右に動きます。
            if(x < left) {
                x = GetX + xMove;
            }
        } else {
            // さもなくば、敵は右に動きます。
            x = GetX + xMove;

            // 但し、敵が可動領域の右端よりも右にいくようなら、左に動きます。
            if(right < x) {
                x = GetX - xMove;
            }
        }

        // 可動領域の外に行く場合は、端っこで止めます。
        y = GetY + yAdd;
        if(y < top) {
            y = top;
        } else if(bottom < y) {
            y = bottom;
        }

        SetMovePosition02(x, y, frame);


    }

}
