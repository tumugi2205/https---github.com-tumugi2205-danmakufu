#東方弾幕風
#Title[０８：連弾 (一斉発射)]
#Text[]
#PlayLevel[弾幕風教材用]
#Image[.\img\study008.png]
#BackGround[Default]
#ScriptVersion[2]

script_enemy_main {
	let imgExRumia = GetCurrentScriptDirectory ~ "img\ExRumia.png";

	@Initialize {
		SetMovePosition02(GetCenterX, GetClipMinY + 128, 60);
		SetLife(3000);

		LoadGraphic(imgExRumia);
		SetTexture(imgExRumia);
		SetGraphicRect(1, 1, 64, 64);
/*
		mainTask;*/
		mainTask2;
		mainTask3;
                TMove;/*
		mainTask32;
		mainTask33;
		mainTask34;
		mainTask35;
		mainTask36;*/
	}

	@MainLoop {
		SetCollisionA(GetX, GetY, 24);
		SetCollisionB(GetX, GetY, 24);
		yield;
	}

	@DrawLoop {
		SetColor(255,255,255);
		SetRenderState(ALPHA);
		SetTexture(imgExRumia);
		if(GetSpeedX == 0) {
			SetGraphicRect(64, 1, 127, 64);
		} else if(GetSpeedX > 0) {
			SetGraphicRect(192, 1, 255, 64);
		} else if(GetSpeedX < 0) {
			SetGraphicRect(128, 1, 191, 64);
		}
		DrawGraphic(GetX, GetY);
	}

	@Finalize  {
		DeleteGraphic(imgExRumia);
	}

	task mainTask {
		loop(20) {yield;}

		loop {
			let speed = 1;
			loop(30) {
				CreateShot01(GetX, GetY, speed, GetAngleToPlayer, RED01, 0);
				speed += 5 / 30;
			}
			loop(60) {yield;}
		}
	}
	task mainTask2 {
		loop(10) {yield;}
       SetShotAutoDeleteClip(100,100,100,100);

		loop {
			let angle = rand(0, 360);
			loop(6) {
                loop(36){
				CreateShotA("S1",GetX, GetY, 20);
                                SetShotDataA("S1",0,2.5,angle,2,-0.02,0,RED22);
                                SetShotDataA("S1",120,NULL,NULL,0,0.02,5,BLUE22);
                                SetShotDataA("S1",160,NULL,NULL,0,-0.02,-5,BLUE22);
                                FireShot("S1");
				angle += 360/36;
			}
			loop(10) {yield;}
                        }
			loop(60) {yield;}
		}
	}
	task mainTask3 {
		loop(10) {yield;}
       SetShotAutoDeleteClip(100,100,100,100);

		loop {
			let angle = rand(0, 360);
			loop(6) {
                loop(36){
				CreateShotA("S1",GetX, GetY, 20);
                                SetShotDataA("S1",0,2.5,angle,2,-0.02,0,RED22);
                                SetShotDataA("S1",120,NULL,NULL,0,0.02,5,BLUE22);
                                SetShotDataA("S1",160,NULL,NULL,0,0.02,5,BLUE22);
                                FireShot("S1");
				angle += 360/36;
			}
			loop(10) {yield;}
                        }
			loop(60) {yield;}
		}
	}
 //////////////////////////////////////////////////////////
 // キャラを移動させるタスク
    task TMove {
        yield;

        loop {
            loop(120) { yield; }
            moveToPlayer(rand(60, 90), rand(-40, 40), 60,
                         GetClipMinX + 32, GetClipMinY + 32,
                         GetClipMaxX - 32, GetClipMinY + 160);
        }
    }

    // なるべくプレイヤーの方向に移動
    //   xMove  : x 方向の移動量（正の数）
    //   yAdd   : y 方向の移動量
    //   frame  : 移動に要するフレーム数
    //   left   : 以下、可動範囲
    //   top    :
    //   right  :
    //   bottom :
    function moveToPlayer(xMove, yAdd, frame, left, top, right, bottom) {
        let x;
        let y;

        if(GetPlayerX < GetX) {
            // プレイヤーより右に敵がいれば、敵は左に動きます。
            x = GetX - xMove;

            // 但し、敵が可動領域の左端よりも左にいくようなら、右に動きます。
            if(x < left) {
                x = GetX + xMove;
            }
        } else {
            // さもなくば、敵は右に動きます。
            x = GetX + xMove;

            // 但し、敵が可動領域の右端よりも右にいくようなら、左に動きます。
            if(right < x) {
                x = GetX - xMove;
            }
        }

        // 可動領域の外に行く場合は、端っこで止めます。
        y = GetY + yAdd;
        if(y < top) {
            y = top;
        } else if(bottom < y) {
            y = bottom;
        }

        SetMovePosition02(x, y, frame);
    }
}
